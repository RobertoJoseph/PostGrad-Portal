GO
CREATE PROC StudentData
    @studentId INT
    

AS
BEGIN
    SELECT * FROM GUCianStudent G
    INNER JOIN PostGradUser U 
    ON G.id = @studentId
    AND G.id = U.id

END

--------

GO
CREATE PROC editMyPassword
    @studentId INT,
    @oldPassword VARCHAR(10),
    @newPassword VARCHAR(10)

AS

IF(exists(select * from PostGradUser where @studentId=id and @oldPassword= password))
    BEGIN
    
        UPDATE PostGradUser
        SET  password = @newPassword
        WHERE PostGradUser.id = @studentId


    END

-------

CREATE Proc SupervisorViewMyStudents
@id int
As
Select s.firstname as SupervisorFirstname,s.lastname as SupervisorLastName,t.title as ThesisTitle,t.years as Years,gs.firstName as StudentFirstName,gs.lastName as StudentLastName,gs.id as StudentId
From Thesis t inner join GUCianRegisterThesis sr on t.serialNumber=sr.thesisSerialNumber
inner join Supervisor s on s.id=sr.supervisor_id inner join GucianStudent gs on sr.GUCianID=gs.id
where s.id = @id
union
Select s.firstname as SupervisorFirstname,s.lastname as SupervisorLastName,t.title as ThesisTitle,t.years as Years,gs.firstName as StudentFirstName,gs.lastName as StudentLastName,gs.id as StudentId
From Thesis t inner join NonGUCianRegisterThesis sr on t.serialNumber=sr.thesisSerialNumber
inner join Supervisor s on s.id=sr.supervisor_id inner join NonGucianStudent gs on sr.nongucianID=gs.id
where s.id = @id

----------

#### TO BE ALTERED ####
^
^
^
^
GO
CREATE PROC ViewEvalProgressReport
    @studentId INT
AS
BEGIN
    IF EXISTS (
        SELECT *
        FROM GUCianProgressReport
        WHERE student_id = @studentId
    )
        BEGIN
        SELECT PR.evaluation, S.firstName, S.lastName, T.title
        FROM GUCianProgressReport PR, Supervisor S, Thesis T
        WHERE PR.student_id = @studentId AND PR.supervisor_id = S.id AND T.serialNumber = PR.thesisSerialNumber
    END
    ELSE
        BEGIN
        SELECT NPR.evaluation, S.firstName, S.lastName, T.title
        FROM NonGUCianProgressReport NPR, Supervisor S, Thesis T
        WHERE NPR.student_id = student_id AND NPR.supervisor_id = S.id AND T.serialNumber = NPR.thesisSerialNumber
    END
END

create PROC linkPubThesis
    @PubID INT,
    @thesisSerialNo INT,
    @SuccessBit BIT OUTPUT
AS
BEGIN
    IF EXISTS(
    SELECT *
    From Thesis_Publication
    Where Thesis_Publication.thesisSerialNumber = @thesisSerialNo AND Thesis_Publication.publication_id = @PubID
    )
        BEGIN
        SET @SuccessBit = 0
    END
    ELSE
        BEGIN
        INSERT INTO Thesis_Publication
            (publication_id, thesisSerialNumber)
        VALUES
            (@PubID, @thesisSerialNo)
        SET @SuccessBit = 1
    END
END

CREATE PROC viewStudentThesisById
    @id int
AS
IF exists(Select *
from GUCianStudent
Where GUCianStudent.id = @id)
BEGIN
    SELECT *
    FROM Thesis
        INNER JOIN GUCianRegisterThesis ON GUCianRegisterThesis.thesisSerialNumber = Thesis.serialNumber
END
ELSE
BEGIN
    SELECT *
    FROM Thesis
        INNER JOIN NonGUCianRegisterThesis ON NonGUCianRegisterThesis.thesisSerialNumber = Thesis.serialNumber
END







----------ADD NEW-----------

GO
CREATE PROC checkGUCian
    @ID INT,
    @Success BIT OUTPUT
AS
BEGIN
    IF EXISTS (
        SELECT *
    FROM GUCianStudent S
    WHERE S.id = @ID
    )
        BEGIN
        SET @Success = 1;
    END
    ELSE
        BEGIN
        SET @Success = 0;
    END
END
-----------







------------- Payment Procedures ---------------
----------------To Be Replaced------------------

GO
CREATE PROC ViewCoursePaymentsInstall
    @studentID INT
AS
BEGIN
    SELECT CP.course_id, I.*, C.code
    FROM NonGUCianPayCourse CP
        INNER JOIN Installment I ON I.paymentID = CP.payment_id
        INNER JOIN Course C ON C.id = CP.course_id 
    WHERE CP.NonGUCianID = @studentID
END



-----

GO
CREATE PROC ViewThesisPaymentsInstall 
    @studentID INT
AS
BEGIN
    IF EXISTS (
        SELECT *
        FROM GUCianStudent
        WHERE GUCianStudent.id = @studentID
    )
        BEGIN
        SELECT GUCianThesis.thesisSerialNumber, I.*, T.title
        FROM GUCianRegisterThesis GUCianThesis
            INNER JOIN Thesis T ON T.serialNumber = GUCianThesis.thesisSerialNumber
            INNER JOIN Installment I ON I.paymentID = T.payment_id
        WHERE GUCianThesis.GUCianID = @studentID
    END
    ELSE
        BEGIN
        SELECT NonGUCianThesis.thesisSerialNumber, I.*, T.title
        FROM NonGUCianRegisterThesis NonGUCianThesis
            INNER JOIN Thesis T ON T.serialNumber = NonGUCianThesis.thesisSerialNumber
            INNER JOIN Installment I ON I.paymentID = T.payment_id
        WHERE NonGUCianThesis.NonGUCianID = @studentID
        END
END

------------------------------------------------

 
-----------




------------------------ADMIN---------------------------

---ADD
Go
CREATE PROC viewAdminProfile 
@id INT
AS 
BEGIN
    SELECT * FROM Admin WHERE Admin.id = @id
END


--------------------------------
---ALTERED

Go
CREATE PROC userLogin
    @ID INT,
    @pASsword VARCHAR(20),
    @Success BIT OUTPUT,
    @userType INT OUTPUT
AS
BEGIN
    IF EXISTS (
        SELECT *
    FROM PostGradUser
    WHERE id = @ID AND pASsword = @pASsword
    )
    BEGIN
        IF Exists(select * from GUCianStudent where id = @id)
        begin
            set @userType = 0;
        end
        Else if Exists(select * from NonGUCianStudent where id = @id)
        begin
            set @userType = 1;
        end
        Else if Exists(select * from Supervisor where id = @id)
        begin
            set @userType = 2;
        end
        Else if Exists(select * from Examiner where id = @id)
        begin
            set @userType = 3;
        end
        Else if Exists(select * from Admin where id = @id)
        begin
            set @userType = 4;
        end
        SET @Success = 1;
    END
    ELSE
        BEGIN
        SET @Success = 0;
    END
END

-------------- ALTER---------------
GO
CREATE PROC AdminListSup
AS
    SELECT S.*, U.email, U.password
    FROM Supervisor S
    INNER JOIN PostGradUser U ON U.id = S.id;

------

GO
CREATE PROC AdminViewStudentThesisBySupervisor
@supervisorID INT
AS
    SELECT S1.firstName, S1.lastName, T1.title AS Thesis, GUCianStudent.firstName AS First_name, GUCianStudent.lastName AS Last_name, GUCianStudent.id AS studentID
    FROM GUCianRegisterThesis
        INNER JOIN Supervisor S1 On S1.id = GUCianRegisterThesis.supervisor_id
        INNER JOIN Thesis T1 on T1.serialNumber = GUCianRegisterThesis.thesisSerialNumber
        INNER JOIN GUCianStudent ON GUCianStudent.id = GUCianRegisterThesis.GUCianID
        WHERE T1.endDate > GETDATE() AND S1.id = @supervisorID

    UNION
    
    SELECT S2.firstName, S2.lastName, T2.title AS Thesis, NonGUCianStudent.firstName AS First_name, NonGUCianStudent.lastName AS Last_name, NonGUCianStudent.id AS studentID
    FROM NonGUCianRegisterThesis
        INNER JOIN Supervisor S2 On S2.id = NonGUCianRegisterThesis.supervisor_id
        INNER JOIN Thesis T2 on T2.serialNumber = NonGUCianRegisterThesis.thesisSerialNumber
        INNER JOIN NonGUCianStudent ON NonGUCianStudent.id = NonGUCianRegisterThesis.NonGUCianID
        WHERE T2.endDate > GETDATE() AND S2.id = @supervisorID




CREATE PROC [dbo].[AdminListAcceptPublication]
    @serialNumber INT
AS
select P.title, P.place, P.host
FROM Thesis_Publication
    INNER JOIN Publication P ON P.id = Thesis_Publication.publication_id
Where P.isAccepted = 1 AND Thesis_Publication.thesisSerialNumber = @serialNumber



-----------------





--------------NEW---------------



Go
CREATE PROC viewAllGUCians
AS
    BEGIN
        SELECT GUCianStudent.*, PostGradUser.email, PostGradUser.password FROM GUCianStudent 
        INNER JOIN PostGradUser
        ON GUCianStudent.id = PostGradUser.id
    END


Go
CREATE PROC viewAllNonGUCians
AS
    BEGIN
        SELECT NonGUCianStudent.*, PostGradUser.email, PostGradUser.password FROM NonGUCianStudent
        INNER JOIN PostGradUser
        ON NonGUCianStudent.id = PostGradUser.id
    END



-------------NEW----------------

GO
CREATE PROC  viewAllCourses
AS
    BEGIN 
        SELECT * FROM Course
    END


GO
CREATE PROC linkCourseHelper
@coursecode varchar(10),
@studentID INT
AS
    BEGIN
        DECLARE @courseID INT = (SELECT Course.id FROM Course
                                WHERE Course.code = @coursecode)
        EXEC linkCourseStudent @courseID, @studentID
    END




-----------UPDATE-----------

GO
CREATE PROC AdminListNonGucianCourse
    @courseID Int
AS
    SELECT NG.firstName , NG.lastName, C.code, NonGUCianTakeCourse.grade, NG.id
    FROM NonGUCianTakeCourse
        INNER JOIN NonGUCianStudent NG ON NG.id = NonGUCianTakeCourse.NonGUCianID
        INNER JOIN Course C ON C.id = NonGUCianTakeCourse.course_id
        Where NonGUCianTakeCourse.course_id = @courseID;
----------------------------